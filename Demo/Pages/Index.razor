@inject Blazug.Controls Debug;
@inject ILogger<Index> _logger

@page "/"

<PageTitle>Counter</PageTitle>


<div theme="@theme">

    <h1>Counter</h1>

    <p role="status">Current count: @currentCount</p>

    <button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

    <img src="/beetle.svg" alt="share-quote" loading="lazy" hidden="@(!@imageVisibility)">

</div>


@code {
    private int currentCount = 0;
    private bool imageVisibility = false;
    private string theme = "light";

    private async Task IncrementCount()
    {
        currentCount++;

        await Debug.DisplayText("counter", $"{currentCount}");

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Console.WriteLine("coucou");

            await Debug.DisplayText("counter", $"{currentCount}");

            await Debug.CreateButton("button", "decrement", OnDecrement );

            await Debug.CreateSwitch("image", imageVisibility, "visible", "hidden", OnToggleImageVisibility, DebugItemMinSize.OneThird);

            await Debug.CreateRadio("theme", 0, new() {"Light","Dark","Black"}, OnThemeChange);


        }
    }

    private async Task OnDecrement()
    {
        currentCount--;

        StateHasChanged();

        await Debug.DisplayText("counter", $"{currentCount}");
    }

    private void OnToggleImageVisibility(bool state)
    {
        imageVisibility = state;

        StateHasChanged();
    }


    protected void OnThemeChange(int index)
    {
        theme = index switch
        {
            1 => "dark",
            2 => "black",
            _ => "light"
        };

         StateHasChanged();
    }



}